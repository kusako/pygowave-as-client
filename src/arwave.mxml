<?xml version="1.0" encoding="utf-8"?>
<!--

This file is part of the ARWave FLEX Client

Copyright (C) 2010 Markus Strickler <markus.strickelr@googlemail.com>

This program is free software: you can redistribute it and/or
modify it under the terms of the GNU General Public License as
published by the Free Software Foundation, either version 3 of
the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public
License along with this program; see the file COPYING. If not,
see <http://www.gnu.org/licenses/>.

-->
<mx:WindowedApplication 
	initialize="init()"
	xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" xmlns:local="*" width="800" height="600" xmlns:controller="pygowave.controller.*" xmlns:maps="com.google.maps.*" xmlns:controls="com.google.maps.controls.*">
	<mx:Script>
		<![CDATA[
			import arwave.MapController;
			
			import flash.events.MouseEvent;
			
			import mx.collections.ArrayCollection;
			import mx.events.DataGridEvent;
			import mx.events.ListEvent;
			
			import com.google.maps.controls.ZoomControl;
			
			import pygowave.model.Blip;
			import pygowave.model.Wavelet;

			[Bindable]
			public var blips:ArrayCollection = new ArrayCollection();
			
			private var oldContent:String;
			private var mapController:MapController;
			
			private function init():void
			{
			}
			
			protected function btnConnect_clickHandler(event:MouseEvent):void
			{
				wc.connectToHost(server.text, username.text, password.text);
				btnConnect.enabled = false;
			}
			
			protected function btnDisconnect_clickHandler(event:MouseEvent):void
			{
				wc.disconnectFromHost();
				this.blips.removeAll();
			}


			protected function datagrid1_itemClickHandler(event:ListEvent):void
			{
				var wavelet:Wavelet = waveGrid.selectedItem as Wavelet;
				if (wc.openWavelets.contains(wavelet.id))
					return;
				for each (var tbr:String in wc.openWavelets)
				{
					wc.closeWavelet(tbr);
				}
				this.mapController.resetMarkers();
				wc.openWavelet(wavelet.id);
				this.blips = wavelet.blips;
				this.mapController.registerBlipCollection(wavelet.blips);
			}


			protected function button1_clickHandler(event:MouseEvent):void
			{
//				var currentWave:Wave = wc.waveList[waveGrid.selectedIndex];
//				wc.waveletAppendBlip(currentWave.waveId, currentWave.waveletId);
				var wavelet:Wavelet = waveGrid.selectedItem as Wavelet;
				if (wavelet == null)
					return;
				wc.appendBlip(wavelet.id);
			}


			protected function blipGrid_itemEditEndHandler(event:DataGridEvent):void
			{
				var blip:Blip = this.blips[event.rowIndex];
				var newContent:String = event.currentTarget.itemEditorInstance.text;
				
				if (newContent == oldContent)
					return;
				blip.content = this.oldContent.slice();
				
				wc.textDeleted(blip.wavelet.id, blip.id, 0, this.oldContent.length);
				wc.textInserted(blip.wavelet.id, blip.id, 0, newContent);
				// wc.draftBlip(blip.wavelet.id, blip.id, false);
			}

			protected function blipGrid_itemEditBeginHandler(event:DataGridEvent):void
			{
				var blip:Blip = this.blips[event.rowIndex];
				// wc.draftBlip(blip.wavelet.id, blip.id, true);
				this.oldContent = blip.content.slice();
			}

			protected function button2_clickHandler(event:MouseEvent):void
			{
				var blip:Blip = blipGrid.selectedItem as Blip;
				if (blipGrid.selectedItem == null)
					return;
				wc.deleteBlip(blip.wavelet.id, blip.id);
			}


			protected function AddWaveButton_clickHandler(event:MouseEvent):void
			{
				wc.createNewWave('New Wave');
			}
			
			protected function onMapReady(event:Event):void
			{
				blipMap.addControl(new ZoomControl());
				this.mapController = new MapController(wc);
				this.mapController.map = this.blipMap;
			}

		]]>
	</mx:Script>
	<controller:Controller id="wc" />
	<mx:Label x="24" y="40" text="Username"/>
	<mx:Label x="30" y="70" text="Password"/>
	<mx:TextInput x="94" y="68" displayAsPassword="true" id="password" text="pygowave" width="169"/>
	<mx:TextInput x="94" y="38" id="username" text="root" width="169"/>
	<mx:Button x="94" y="98" label="Connect" id="btnConnect" click="btnConnect_clickHandler(event)" enabled="{!(wc.state == 'online')}"/>
	<mx:Label x="10" y="10" text="Server Name"/>
	<mx:TextInput x="94" y="8" text="192.168.56.3" id="server" width="169"/>
	<mx:Button x="174" y="98" label="Disconnect" id="btnDisconnect" click="btnDisconnect_clickHandler(event)" enabled="{wc.state == 'online'}"/>
	<mx:Label x="0" y="561" text="PONG:"/>
	<mx:DataGrid x="271" y="7" width="517" enabled="true" height="139" dataProvider="{wc.allWaveletColl}" 
				 editable="false" itemClick="datagrid1_itemClickHandler(event)" id="waveGrid">
		<mx:columns>
			<mx:DataGridColumn headerText="Wave ID" dataField="wave.waveId"/>
			<mx:DataGridColumn headerText="Wavelet ID" dataField="id"/>
			<mx:DataGridColumn headerText="Title" dataField="title"/>
		</mx:columns>
	</mx:DataGrid>
	<mx:Button x="10" y="531" label="Add" click="button1_clickHandler(event)"/>
	<mx:Button x="67" y="531" label="Delete" click="button2_clickHandler(event)"/>
	<mx:Button x="271" y="154" label="Add Wave" id="AddWaveButton" click="AddWaveButton_clickHandler(event)"/>
	<mx:TabNavigator x="10" y="177" width="779" height="347">
		<mx:Canvas label="Map View" width="100%" height="100%">
			<maps:Map x="0" y="0" key="ABQIAAAAE1mUeeqaDJOOFJUhbhnWCxRjZp0CC3Zy-BeqUZiJH5fppo5GyRQH1ed-a594Pz0WCRl1EkPMP3eOUw" 
					  url="http://www.braindump.ms" mapevent_mapready="onMapReady(event)" id="blipMap" width="100%" height="100%">
			</maps:Map>
		</mx:Canvas>
		<mx:Canvas label="Blip View" width="100%" height="100%">
			<mx:DataGrid id="blipGrid" x="-0.5" y="0" width="778" height="314" dataProvider="{blips}" variableRowHeight="true" editable="true"
						 itemEditBegin="blipGrid_itemEditBeginHandler(event)" itemEditEnd="blipGrid_itemEditEndHandler(event)">
				<mx:columns>
					<mx:DataGridColumn headerText="Blip ID" dataField="id" width="100" editable="false" sortable="false"/>
					<mx:DataGridColumn headerText="Blip Content" dataField="content" wordWrap="true" width="350" id="contentColumn" sortable="false"/>
					<mx:DataGridColumn dataField="creator.id" headerText="Creator" sortable="false" width="200" editable="false"/>
				</mx:columns>
			</mx:DataGrid>
		</mx:Canvas>
	</mx:TabNavigator>
</mx:WindowedApplication>
